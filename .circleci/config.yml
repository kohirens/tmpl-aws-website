version: 2.1

orbs:
  vr: kohirens/version-release@3.1.0

parameters:
  ctx_release:
    default: b01-automation
    description: Auto release context
    type: string
  ssh_finger:
    description: SSH fingerprint.
    type: string
    default: "ea:86:67:3d:7f:91:b3:12:80:75:3e:9b:cc:f9:d4:f1"
  triggered_flow:
    default: "workflow-selector"
    description: Workflow to be executed.
    type: string

executors:
  kohirens_aws:
    docker:
      - image: kohirens/alpine-awscli:2.13.32
        auth:
          username: ${DH_USER}
          password: ${DH_PASS}

  kohirens_go:
    docker:
      - image: kohirens/circleci-go:0.4.1
        auth:
          username: ${DH_USER}
          password: ${DH_PASS}

  aws-tf:
    docker:
      - image: kohirens/circleci-aws-iac-tf:0.2.0
        auth:
          username: ${DH_USER}
          password: ${DH_PASS}

filter-semantic-tag: &filter-semantic-tag
  tags:
    only: /^v?\d+\.\d+\.\d+$/
  branches:
    ignore: /.*/

jobs:
  run-tests:
    docker:
      - image: cimg/go:1.17
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Validate Answers/Template Schemas"
          command: |
            curl -L -o "yajsv" https://github.com/neilpa/yajsv/releases/download/v1.4.1/yajsv.linux.amd64
            chmod +x ./yajsv
            ./yajsv -s answers.schema.json testdata/answers-01.json
            ./yajsv -s template.schema.json testdata/template-01.json
            ./yajsv -s template.schema.json testdata/template-1.2.json

workflows:
  quality_checks:
    jobs:
      - run-tests:
          filters: { branches: { ignore: /main|auto-update-changelog/ } }
          context:
            - << pipeline.parameters.ctx_release >>

  workflow-selector:
    when:
      and:
        - equal: ["workflow-selector", << pipeline.parameters.triggered_flow >>]
        - equal: [ main, << pipeline.git.branch >> ]
    jobs:
      - vr/workflow-selector:
          context: << pipeline.parameters.ctx_release >>
          ssh_finger: << pipeline.parameters.ssh_finger >>

  publish-changelog:
    when:
      and:
        - equal: ["publish-changelog", << pipeline.parameters.triggered_flow >>]
    jobs:
      - vr/publish-changelog:
          context: << pipeline.parameters.ctx_release >>
          ssh_finger: << pipeline.parameters.ssh_finger >>

  publish-release-tag:
    when:
      and:
        - equal: ["publish-release-tag", << pipeline.parameters.triggered_flow >>]
    jobs:
      - vr/tag-and-release:
          context: << pipeline.parameters.ctx_release >>
